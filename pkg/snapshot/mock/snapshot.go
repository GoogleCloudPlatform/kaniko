// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GoogleContainerTools/kaniko/pkg/snapshot (interfaces: TarWriter)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTarWriter is a mock of TarWriter interface
type MockTarWriter struct {
	ctrl     *gomock.Controller
	recorder *MockTarWriterMockRecorder
}

// MockTarWriterMockRecorder is the mock recorder for MockTarWriter
type MockTarWriterMockRecorder struct {
	mock *MockTarWriter
}

// NewMockTarWriter creates a new mock instance
func NewMockTarWriter(ctrl *gomock.Controller) *MockTarWriter {
	mock := &MockTarWriter{ctrl: ctrl}
	mock.recorder = &MockTarWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTarWriter) EXPECT() *MockTarWriterMockRecorder {
	return m.recorder
}

// WriteToTar mocks base method
func (m *MockTarWriter) WriteToTar(arg0, arg1 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteToTar", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteToTar indicates an expected call of WriteToTar
func (mr *MockTarWriterMockRecorder) WriteToTar(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteToTar", reflect.TypeOf((*MockTarWriter)(nil).WriteToTar), arg0, arg1)
}
